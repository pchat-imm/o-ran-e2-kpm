diff --git a/examples/xApp/c/monitor/xapp_kpm_moni.c b/examples/xApp/c/monitor/xapp_kpm_moni.c
index 7ed3b86f..3a1ea3c6 100644
--- a/examples/xApp/c/monitor/xapp_kpm_moni.c
+++ b/examples/xApp/c/monitor/xapp_kpm_moni.c
@@ -36,14 +36,16 @@ void sm_cb_kpm(sm_ag_if_rd_t const* rd)
   assert(rd != NULL);
   assert(rd->type == KPM_STATS_V0);
 
-  int64_t now = time_now_us();
-      
-  // KPM has 1 second resolution in its indication header, while 'now' is in microseconds
-  int64_t diff = now/1000000 - (int64_t)rd->kpm_stats.hdr.collectStartTime;
-  if (diff > 1)
-    printf("KPM ind_msg latency = %lu seconds\n", diff);
-  else
-    printf("KPM ind_msg latency < 1 seconds\n");
+  const kpm_ind_msg_t* msg = &rd->kpm_stats.msg;
+  for(size_t i = 0; i < msg->MeasData_len; i++){
+    MeasInfo_t* curMeasInfo = &msg->MeasInfo[i];
+    adapter_MeasDataItem_t* curMeasData = &msg->MeasData[i];
+    for(size_t j = 0; j < curMeasData->measRecord_len; j++){
+      adapter_MeasRecord_t* curMeasRecord = &(curMeasData->measRecord[j]);
+      printf("Received RIC Indication:\n");
+      printf("---Metric: %s: Value: %li\n", curMeasInfo->measName.buf, curMeasRecord->int_val);
+    }
+  }
 }
 
 int main(int argc, char *argv[])
diff --git a/src/lib/ap/dec/e2ap_msg_dec_asn.c b/src/lib/ap/dec/e2ap_msg_dec_asn.c
index 6d489a2e..86bfb9cc 100644
--- a/src/lib/ap/dec/e2ap_msg_dec_asn.c
+++ b/src/lib/ap/dec/e2ap_msg_dec_asn.c
@@ -542,7 +542,7 @@ e2ap_msg_t e2ap_dec_subscription_response(const E2AP_PDU_t* pdu)
     const RICaction_Admitted_ItemIEs_t *ai = (const RICaction_Admitted_ItemIEs_t *)act_adm_list->value.choice.RICaction_Admitted_List.list.array[i];
 
     assert(ai->id == ProtocolIE_ID_id_RICaction_Admitted_Item);
-    assert(ai->criticality == Criticality_reject);
+    //assert(ai->criticality == Criticality_reject);
     assert(ai->value.present == RICaction_Admitted_ItemIEs__value_PR_RICaction_Admitted_Item);
 
     ric_action_admitted_t* dst = &sr->admitted[i];
@@ -551,10 +551,14 @@ e2ap_msg_t e2ap_dec_subscription_response(const E2AP_PDU_t* pdu)
     dst->ric_act_id =  src->ricActionID;
   }
 
+  if (out->protocolIEs.list.count < 4) {
+    return ret;
+  }
+
   // RIC Actions Not Admitted Lists
   const RICsubscriptionResponse_IEs_t* act_not_adm_list = out->protocolIEs.list.array[3];
   assert(act_not_adm_list->id == ProtocolIE_ID_id_RICactions_NotAdmitted);
-  assert(act_not_adm_list->criticality == Criticality_reject);
+  //assert(act_not_adm_list->criticality == Criticality_reject);
   assert(act_not_adm_list->value.present == RICsubscriptionResponse_IEs__value_PR_RICaction_NotAdmitted_List);
 
   const size_t sz_not_ad = act_not_adm_list->value.choice.RICaction_NotAdmitted_List.list.count;
@@ -794,7 +798,7 @@ e2ap_msg_t e2ap_dec_indication(const E2AP_PDU_t* pdu)
 
   assert(pdu->present == E2AP_PDU_PR_initiatingMessage);
   assert(pdu->choice.initiatingMessage->procedureCode == ProcedureCode_id_RICindication);
-  assert(pdu->choice.initiatingMessage->criticality == Criticality_reject);
+  //assert(pdu->choice.initiatingMessage->criticality == Criticality_reject);
   assert(pdu->choice.initiatingMessage->value.present == InitiatingMessage__value_PR_RICindication); 
 
   const RICindication_t* out = &pdu->choice.initiatingMessage->value.choice.RICindication;
diff --git a/src/ric/msg_handler_ric.c b/src/ric/msg_handler_ric.c
index 425fa365..ae5dd829 100644
--- a/src/ric/msg_handler_ric.c
+++ b/src/ric/msg_handler_ric.c
@@ -84,8 +84,8 @@ e2_setup_response_t generate_setup_response(near_ric_t* ric, const e2_setup_requ
     if(it != end_it){
       assert(id == *(uint16_t*)assoc_key(&ric->plugin.sm_ds, it) );
       accepted[i] = id;
-      char def[128] = {0};
-      assert(req->ran_func_item[i].def.len < 127 );
+      char def[1024] = {0};
+      assert(req->ran_func_item[i].def.len < 1023 );
       memcpy(def, req->ran_func_item[i].def.buf, req->ran_func_item[i].def.len);
       printf("[NEAR-RIC]: Accepting RAN function ID %d with def = %s \n", id, def);
     } else {
diff --git a/src/sm/kpm_sm_v2.02/kpm_sm_ric.c b/src/sm/kpm_sm_v2.02/kpm_sm_ric.c
index 86208a9d..705d2add 100644
--- a/src/sm/kpm_sm_v2.02/kpm_sm_ric.c
+++ b/src/sm/kpm_sm_v2.02/kpm_sm_ric.c
@@ -81,7 +81,7 @@ static sm_subs_data_t on_subscription_kpm_sm_ric(sm_ric_t const* sm_ric, const c
 	adapter_LabelInfoItem_t	dummylabelInfo = {.noLabel = &noLabelnum}; 
   MeasInfo_t dummy_MeasInfo = { 
     .meas_type = KPM_V2_MEASUREMENT_TYPE_NAME, 
-    .measName = {.buf = (unsigned char *)"test", .len = 5}, 
+    .measName = {.buf = (unsigned char *)"RSRP", .len = 4},
     .labelInfo = &dummylabelInfo, 
     .labelInfo_len = 1
   };
